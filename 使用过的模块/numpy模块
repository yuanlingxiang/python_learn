1、创建数组

将任意序列转换为数组对象
np.array(seq)
np.asarray(seq)

生成指定范围数组
通过reshape指定数组的形状
np.arange(start, end, step)

生成值全为1的数组；
np.ones(m)  #一维数组，m个元素
np.ones((m, n))  #二维数组，(m, n)为形状

根据arr数组的形状，生成形状与arr相同，值为1的数组
np.ones_like(arr)

生成值全为0的数组；
np.zeros(m)    #一维数组，m个元素
np.zeros((m, n))  #二维数组，(m, n)为形状

根据arr数组的形状，生成形状与arr相同，值为0的数组
np.zeros_like()

生成数据全为1的数组
可通过(m, n)指定数组形状

生成值全为垃圾值的数组；
np.empty(m)    #一维数组，m个元素
np.empty(m, n)    #二维数组，(m, n)为形状

根据arr数组的形状，生成形状与arr相同，值为垃圾值的数组
np.empty_like()


生成数组维度为(m, m)，对角线为1的数组
np.eye(m)
np.identity(m)


创建多个二维数组
arr = np.arange(32).reshape((2, 4, 4))
________________________________________________________________
2、查看维度
arr1.shape   #查看形状  
arr1.ndim    #查看维度
________________________________________________________________
3、修改数据类型
arr1.astype(np.int64)
________________________________________________________________
4、数组的运算

大小相等的数组间运算：是对应的元素之间运算

数组和标量之间的运算：标量将和数组的每个元素进行运算
________________________________________________________________
5、索引
一维数组：和列表一致

二维数组：
访问第m行，第n列元素:
arr[m, n]
arr[m]:获取第m行的所有元素

注意：对数组的任何修改都会映射到原始数组上；
创建数组副本的办法：arr.copy()
________________________________________________________________
6、切片
一维数组：和列表一致

二维数组：
返回前n行数据
arr[:m]

指定行、列范围
arr[:m, :n]
arr[:, n:]

取出指定行：
arr[[i, j, k]]   #取出第i, j, k行数据
________________________________________________________________
7、布尔索引
data[names == 'Bobs']
names:是与data数组列长度相等的数组
'Bobs'：为names数组中的一个元素
names == 'Bobs'：用于返回bool数组
data[names == 'Bobs']：取出对应bool数组中为true的行

组合布尔条件：
通过&、|运算符即可，如下形式
data[(names == 'Bobs') & (names == 'tob')]


布尔型索引常用来给元素赋值，如下：
data[data<0] = 1  #data数组中小于0的元素赋值为1

注意：and和or在bool型数组中无效
________________________________________________________________
8、花式索引：可以按制定返回值顺序

取出指定元素：arr[i, i1], arr[j, j1], arr[k, k1]
arr[[i, j, k], [i1, j1, k1]]

取出制定区域元素，改变显示顺序
方法1：
arr[[i, j, k]][:, [i, j, k]]
方法2：
arr[np.ix_([i, j, k], [i, j, k])]
________________________________________________________________
9、转置
arr.T
arr.transpose((1, 0, 2))   #适用于高维度数组
arr.swapaxes(1, 2)      #适用于高维度数组
________________________________________________________________
10、一元运算函数
np.sqrt(arr):元素级开方
np.abs(arr)：元素绝对值
np.square(arr)：元素平方
np.exp(arr)：元素的指数
np.log(arr)：元素的对数
np.log10(arr)：元素的对数
np.log2(arr)：元素的对数
np.log1p(arr)：元素的对数
np.sign(arr)：元素的正负号
np.ceil(arr)：大于等于元素的最小整数
np.floor(arr)：小于等于元素的最大整数
np.rint(arr)：四舍五入到最接近的最小整数
np.modf(arr)：将元素的整数和小数分别作为两个数组返回
np.isnan(arr)：返回那些值是NAN的bool型数组
np.cos(arr)：
np.cosh(arr)
np.sin(arr)
np.sinh(arr)
np.tan(arr)
np.tanh(arr)
np.arccos(arr)
np.arccosh(arr)
np.arcsin(arr)
np.arcsinh(arr)
np.arctan(arr)
np.arctanh(arr)
np.logcal_not(arr)：计算元素的逻辑非

二元运算函数
np.add(arr1, arr2)
np.subtract(arr1, arr2)
np.multiply(arr1, arr2)
np.divide(arr1, arr2)
np.floor_divide(arr1, arr2):元素间相除，丢弃余数
np.pow(arr1, arr2):幂运算
np.maximum(arr1, arr2)：元素间最大值组成的数组
np.fmax(arr1, arr2)：元素间最大值组成的数组，忽略NaN
np.minimum(arr1, arr2)：元素间最小值组成的数组
np.fmin(arr1, arr2)：元素间最小值组成的数组，忽略NaN
np.mod(arr1, arr2)：元素级求莫运算
np.copysign(arr1, arr2)：将第二个数组值的符号，赋值给第一个数组中的值
np.greater(arr1, arr2)：元素级>计算，返回bool数组
np.greater_equal(arr1, arr2)：元素级>=计算，返回bool数组
np.less(arr1, arr2)：元素级<计算，返回bool数组
np.less_equal(arr1, arr2)：元素级<=计算，返回bool数组
np.equal(arr1, arr2)：元素级等于计算，返回bool数组
np.not_equal(arr1, arr2)：元素级不等于计算，返回bool数组
np.logical_and(arr1, arr2)：元素级逻辑与运算
np.logical_or(arr1, arr2)：元素级逻辑或运算
np.logical_xor(arr1, arr2)：元素级逻辑异或运算

________________________________________________________________
11、np.where(cond, arr1, arr2):
cond：为bool数组
结果：cond元素为True时，选择对应的arr1中的元素，否则选择arr2中的元素
arr1和arr2可以是标量
________________________________________________________________
12、统计方法
np.sum(arr1):对数组中全部元素；或者某轴向的元素求和
np.mean(arr1):对数组中全部元素；或者某轴向的元素计算算数平均数，零长度数组为NAN
np.std(arr1):标准差
np.var(arr1):方差
np.min(arr1):最小值
np.max(arr1):最大值
np.argmin(arr1):最小元素索引
np.argmax(arr1):最大元素索引
np.cumsum(arr1):返回数组，计算元素的累计和
np.cumprod(arr1):返回数组，计算元素的累计积
________________________________________________________________
13、用于布尔型数组的方法
arr1.sum():  计算bool数组True元素个数
arr1.any():  计算bool数组是否有True元素
arr1.all():  计算bool数组是否全是True元素
________________________________________________________________
14、排序
np.sort(arr1, axes)：指定轴进行排序；排序后的是arr1的副本
arr1.sort(axes):修改直接反应到原始数组上
________________________________________________________________
15、集合方法
np.unique(arr1):计算arr1的唯一元素，返回有序结果
np.intersect1d(arr1, arr2):计算arr1和arr2的交集，返回有序结果
np.union1d(arr1, arr2):计算arr1和arr2的并集，返回有序结果
np.in1d(arr1, arr2):返回一个arr1中包含arr2的bool数组
np.setdiff1d(arr1, arr2):计算arr1和arr2的差集
np.setxor1d(arr1, arr2):集合对称差
________________________________________________________________
16、用于线性代数的方法

np.diag(arr1):返回方阵arr1对角线的元素；如果arr1是以为数组，则形成以arr1为对角线的方阵
dot:矩阵剩法
trace:计算矩阵对角线元素的和
det:计算矩阵行列式，该方法存在numpy.linalg模块中

存在numpy.linalg模块中的方法
eig：计算方阵的本征值和本征向量
inv：计算方阵的逆
pinv：计算方阵的伪逆
qr:计算QR分解
svd:计算奇异值分解
solve:解线性方程组Ax = b, A为一个方阵
lstsq:解线性方程组Ax = b的最小二剩解
________________________________________________________________
17、随机数

存在numpy.random模块中
seed：确定一个随机数生成器种子
permutation:返回一个序列的随机排列或返回一个随机排列的范围
shuffle:对一个序列就地随机排列
rand:生成均匀分布的样本值
randint:从给定范围内随机生成整数
randn:生成正太分布的样本值
binomial:生成二项分布样本值
normal:生成高斯分布样本值
beta:生成beta分布样本值
chisquare:生成卡方分布样本值
gamma:生成伽马分布样本值
uniform:生成[0, 1)均匀分布样本值


























索引



数组转置和轴对换



基本的数组统计方法
