1,数字类型
三种整型：int， long， bool
其他：complex, float
从python2.3开始，不会存在整型溢出错误， 结果会自动的被转换为长整数

2，字符串
不支持反向截取子串
如:string[-1:-3]将返回一个空的字符串

3，列表，元组
可存储任意的python对象

4，print x, 
可以使输出在同一行
print
仅仅输出一个换行


5, 类
类变量可以被通过实例.类变量或者类名.类变量的方法访问
__init__函数是初始化实例的属性，创建实例后自动调用的第一个方法




1、为什么不需要事先声明变量
解释器会根据赋值号右侧的对象获取对象的类型

2、引用计数
对象被引用的次数

3、数据类型：
标准类型：
int, float, complex, bool, str, 列表，字典，元组
其他类型：
类，方法，函数，NoneType，集合，文件类型，模块

4、工厂函数
int(), long(), float(), complex()
str(), unicode()
list(), tuple()
type()


dict()
bool()
set(), frozenset()
object()
classmethod()
staticmethod()
super()
property()
file()

5、可调用对象
可用callable(obj)判断进行判断，返回bool值


6、执行对象
compile()
编译代码为代码对象

例子：
compile(arg1, arg2, arg3)
arg1：编译的代码对象
arg2：一个空字符串，用于表示代码对象的名字
arg3：三个可能值
如果arg1是表达式，则取eval
如果arg1是单一可执行语句，则取exec
如果arg1是语句块，则取exec


exec
可用于执行python代码，返回执行结果
可用于执行文件对象：
f = open(path)
exec f

eval:
用于对表达式求值或者执行python字符串

execfile()
可以用于执行python文件，并自动关闭

os.system()
执行系统命令，如：
os.system('dir')
结果立即打印打屏幕上
返回状态：0表示成功，1表示失败


os.popen()
用于执行系统命令，不显示返回结果，返回文件对象
f = os.popen(系统命令)

7,在交互式解释器中：
用print语句显示变量的字符串表示， 调用的str()
使用变量名查看该变量的原始值，调用repr()

8,通过print重定向输出到文件
print >> 重定向输入位置, '输出内容'

f = open(path, 'w')
print >> f, '输出内容'
f.close()

9,运算符优先级：
乘方>单目>剩，除，求与>加，减











